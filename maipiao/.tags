!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CreateMenu	.\test\test_dialog.py	/^    def CreateMenu(self, menuData):  $/;"	m	class:PaintFrame
CreateMenuBar	.\test\test_dialog.py	/^    def CreateMenuBar(self):  $/;"	m	class:PaintFrame
CreateMenuItem	.\test\test_dialog.py	/^    def CreateMenuItem(self, menu, label, status, handler, kind = wx.ITEM_NORMAL):  $/;"	m	class:PaintFrame
DrawLines	.\test\test_dialog.py	/^        def DrawLines(self, dc):  $/;"	m	class:PaintWindow
FindHostPort	.\test\test_server.py	/^def FindHostPort(datas):$/;"	f
GetLinesData	.\test\test_dialog.py	/^        def GetLinesData(self):  $/;"	m	class:PaintWindow
HttpCurl	.\lib\HttpCurl.py	/^class HttpCurl:$/;"	c
InitBuffer	.\test\test_dialog.py	/^        def InitBuffer(self):  $/;"	m	class:PaintWindow
InitLog	.\test\test_server.py	/^def InitLog():$/;"	f
InitStatusBar	.\test\test_dialog.py	/^    def InitStatusBar(self):  $/;"	m	class:PaintFrame
MenuData	.\test\test_dialog.py	/^    def MenuData(self):  $/;"	m	class:PaintFrame
ORDER_CREATE_DATA	.\data\OrderCreateData.py	/^ORDER_CREATE_DATA={$/;"	v
OnCloseWindow	.\test\test_dialog.py	/^    def OnCloseWindow(self, event):  $/;"	m	class:PaintFrame
OnColor	.\test\test_dialog.py	/^    def OnColor(self, event):  $/;"	m	class:PaintFrame
OnIdle	.\test\test_dialog.py	/^        def OnIdle(self, event):  $/;"	m	class:PaintWindow
OnLeftDown	.\test\test_dialog.py	/^        def OnLeftDown(self, event):  $/;"	m	class:PaintWindow
OnLeftUp	.\test\test_dialog.py	/^        def OnLeftUp(self, event):  $/;"	m	class:PaintWindow
OnMotion	.\test\test_dialog.py	/^        def OnMotion(self, event):  $/;"	m	class:PaintWindow
OnNew	.\test\test_dialog.py	/^    def OnNew(self, event):  $/;"	m	class:PaintFrame
OnOpen	.\test\test_dialog.py	/^    def OnOpen(self, event):  $/;"	m	class:PaintFrame
OnPaint	.\test\test_dialog.py	/^        def OnPaint(self, event):  $/;"	m	class:PaintWindow
OnPaintMotion	.\test\test_dialog.py	/^    def OnPaintMotion(self, event):  $/;"	m	class:PaintFrame
OnSave	.\test\test_dialog.py	/^    def OnSave(self, event):   $/;"	m	class:PaintFrame
OnSaveAs	.\test\test_dialog.py	/^    def OnSaveAs(self, event):  $/;"	m	class:PaintFrame
OnSize	.\test\test_dialog.py	/^        def OnSize(self, event):  $/;"	m	class:PaintWindow
PaintFrame	.\test\test_dialog.py	/^class PaintFrame(wx.Frame):  $/;"	c
PaintWindow	.\test\test_dialog.py	/^class PaintWindow(wx.Window):  $/;"	c
Queue	.\test\test_server.py	/^import Queue$/;"	i
ReadFile	.\test\test_dialog.py	/^    def ReadFile(self):  $/;"	m	class:PaintFrame
SaveFile	.\test\test_dialog.py	/^    def SaveFile(self):  $/;"	m	class:PaintFrame
SetColor	.\test\test_dialog.py	/^        def SetColor(self, color):  $/;"	m	class:PaintWindow
SetLinesData	.\test\test_dialog.py	/^        def SetLinesData(self, lines):  $/;"	m	class:PaintWindow
SetThickness	.\test\test_dialog.py	/^        def SetThickness(self, num):  $/;"	m	class:PaintWindow
StringIO	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
StringIO	.\test\test_server.py	/^from StringIO import StringIO$/;"	i
__init__	.\lib\HttpCurl.py	/^	def __init__(self):$/;"	m	class:HttpCurl
__init__	.\test\test_dialog.py	/^        def __init__(self, parent, id):  $/;"	m	class:PaintWindow
__init__	.\test\test_dialog.py	/^    def __init__(self, parent):  $/;"	m	class:PaintFrame
a	.\common\settings.py	/^a = ("&New", "New paint file")$/;"	v
app	.\test\test_dialog.py	/^    app = wx.PySimpleApp()  $/;"	v	class:PaintFrame
c	.\test\test_server.py	/^        c = c + 1$/;"	v
c	.\test\test_server.py	/^    c = 0$/;"	v
cPickle	.\test\test_dialog.py	/^import cPickle  $/;"	i
cgi	.\test\test_server.py	/^import cgi$/;"	i
child_num	.\test\test_server.py	/^    child_num = 19$/;"	v
clearfd	.\test\test_server.py	/^def clearfd(epoll_fd, params, fd):$/;"	f
clearfdpro	.\test\test_server.py	/^def clearfdpro(epoll_fd, params, fd):$/;"	f
connect_pro	.\test\test_server.py	/^def connect_pro(params, param, epoll_fd, datas, fd, cur_time, host, port):$/;"	f
copy	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
curl	.\lib\HttpCurl.py	/^    def curl(self,url,errnum=0):$/;"	f	function:HttpCurl.__init__
drawMotion	.\test\test_dialog.py	/^        def drawMotion(self, dc, event):  $/;"	m	class:PaintWindow
errno	.\test\test_server.py	/^import select, errno$/;"	i
frame	.\test\test_dialog.py	/^    frame = PaintFrame(None)  $/;"	v	class:PaintFrame
getTraceStackMsg	.\test\test_server.py	/^def getTraceStackMsg():$/;"	f
getsize	.\test\test_server.py	/^from os.path import join, getsize$/;"	i
gzip	.\test\test_server.py	/^import gzip$/;"	i
imp	.\test\test_server.py	/^import imp$/;"	i
join	.\test\test_server.py	/^from os.path import join, getsize$/;"	i
json	.\data\OrderCreateData.py	/^import json$/;"	i
json	.\test\test_server.py	/^import json$/;"	i
listen_fd	.\test\test_server.py	/^        listen_fd = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)$/;"	v
logger	.\test\test_server.py	/^logger = logging.getLogger("network-server")$/;"	v
logging	.\test\test_server.py	/^import socket, logging$/;"	i
newpid	.\test\test_server.py	/^        newpid = os.fork()$/;"	v
os	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
os	.\test\test_dialog.py	/^import os  $/;"	i
os	.\test\test_server.py	/^import os$/;"	i
parse_qs	.\test\test_server.py	/^from cgi import parse_qs$/;"	i
port	.\test\test_server.py	/^    port = int(sys.argv[1])$/;"	v
postCurl	.\lib\HttpCurl.py	/^    def postCurl(self):$/;"	f	function:HttpCurl.__init__
process_datas	.\test\test_server.py	/^def process_datas(process_status, params, param, epoll_fd, datas, read_len, fd, cur_time):$/;"	f
pycurl	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
random	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
re	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
re	.\test\test_server.py	/^import re$/;"	i
run_main	.\test\test_server.py	/^def run_main(listen_fd):$/;"	f
select	.\test\test_server.py	/^import select, errno$/;"	i
socket	.\test\test_server.py	/^import socket, logging$/;"	i
ssl	.\test\test_server.py	/^import ssl$/;"	i
sys	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
sys	.\test\test_server.py	/^import sys$/;"	i
thread	.\test\test_server.py	/^import thread$/;"	i
threading	.\test\test_server.py	/^import threading$/;"	i
time	.\test\test_server.py	/^import time$/;"	i
traceback	.\test\test_server.py	/^import traceback$/;"	i
types	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
urllib	.\lib\HttpCurl.py	/^import sys,os,types,pycurl,StringIO,random,re,copy,urllib$/;"	i
wx	.\test\test_dialog.py	/^import wx  $/;"	i
